//indexed participants  (Subscriber)

Index I = {1..n} #subscribers
Index J = {1..n} #Topics

Participant Subscriber{i : I}
Participant Provider{1}
Participant Topic{j : J}

Channel g{1}
Channel q{i: I} #task queue

Label l{subscribe, not_subscribe}

Subscribe_Event{j: J, n: nat} =
    Topic[j] -> Provider: g<Topic>{
        foreach(i: I) {
            l::subscribe: Subscriber[i] -> Topic[j]: g<callback>. end.
            l::not_subscribe: end.
        }
    }

Subscribe_Event{j: J, 0} = end.

Topic_Event{j': J, n: nat} = Rec X(j, n) {
    Provider -> Topic[j] : g<Message>.
    foreach(i: I) {
        if(Subscriber[i] l::subscribe Topic[j]){
            Topic[i] -> Subscriber[i]: q[i]<Message>
            ? Subscriber[i] -> P: g<Message>. X{j, n}
        }
    }
}. X{j, n-1}

Topic_Event{j': J, 0} = end.


Publisher_Subscriber = 
    Rec X(j': J, n: nat){Subscriber_Event(j, n) | X(j', n-1)}. 
    Rec X(j': J, n: nat){Topic_Event(j, n) | X(j', n-1)}.



